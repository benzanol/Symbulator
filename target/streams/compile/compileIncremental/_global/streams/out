[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/quaviq/Documents/Programming/Scala/Calculator/src/main/scala/ui/Graph.scala, /home/quaviq/Documents/Programming/Scala/Calculator/src/main/scala/Symbolics.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(sympany.symbolics.SymProd, sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymPow, sympany.symbolics.SymPM, sympany.symbolics.SymSum, sympany.symbolics.SymE, sympany.symbolics.Sym, sympany.symbolics.SymLog, sympany.ui.graph.Graph.GraphPos, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymUnordered, sympany.ui.graph.Graph, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(sympany.symbolics.SymProd, sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymPow, sympany.symbolics.SymPM, sympany.symbolics.SymSum, sympany.symbolics.SymE, sympany.symbolics.Sym, sympany.symbolics.SymLog, sympany.ui.graph.Graph.GraphPos, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymUnordered, sympany.ui.graph.Graph, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/quaviq/Documents/Programming/Scala/Calculator/src/main/scala/ui/Graph.scala, /home/quaviq/Documents/Programming/Scala/Calculator/src/main/scala/Symbolics.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymProd, sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymPow, sympany.symbolics.SymPM, sympany.symbolics.SymSum, sympany.symbolics.SymE, sympany.symbolics.Sym, sympany.symbolics.SymLog, sympany.ui.graph.Graph.GraphPos, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymUnordered, sympany.ui.graph.Graph, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymLog by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymConstant by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymDecimal by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymVar by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymR by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUndefined by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPositiveInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymInt by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymNegativeInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUnordered by sympany.symbolics.Sym[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to /home/quaviq/Documents/Programming/Scala/Calculator/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.2:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.2:compile for Scala 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 488f2db1 for Scala compiler version 2.13.1[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/quaviq/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-js/scalajs-compiler_2.13.1/1.10.0/scalajs-compiler_2.13.1-1.10.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/quaviq/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.1/scala-library-2.13.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/quaviq/Documents/Programming/Scala/Calculator/target/scala-2.13/classes:/home/quaviq/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-js/scalajs-dom_sjs1_2.13/2.1.0/scalajs-dom_sjs1_2.13-2.1.0.jar:/home/quaviq/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-js/scalajs-library_2.13/1.10.0/scalajs-library_2.13-1.10.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.830067829 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymR...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymFrac by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUndefined by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPositiveInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymInt by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymNegativeInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymFrac, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.IntP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymR,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 6 classes due to The sympany.symbolics.SymR has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymFrac, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymPi...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymPi[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymPi)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymPi,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymPi has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymPi)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymUndefined...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymUndefined[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymUndefined)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymUndefined,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(finalize,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymUndefined has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(finalize,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymUndefined)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymNegativeInfinity...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymNegativeInfinity[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymNegativeInfinity,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymNegativeInfinity has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymDecimal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymDecimal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymDecimal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymDecimal,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymDecimal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymDecimal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymUnordered...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymUnordered[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymSum by sympany.symbolics.SymUnordered[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymProd by sympany.symbolics.SymUnordered[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymUnordered, sympany.symbolics.SymSum, sympany.symbolics.SymProd)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.SumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsSumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymUnordered,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 3 classes due to The sympany.symbolics.SymUnordered has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymUnordered, sympany.symbolics.SymSum, sympany.symbolics.SymProd)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymSum...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymSum[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymSum)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.SumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsSumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymSum,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymSum has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymSum)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymFrac...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymFrac[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymFrac)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymFrac,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymFrac has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymFrac)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.Sym...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPow by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPM by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymLog by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymConstant by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPi by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymE by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymDecimal by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymVar by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymR by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymFrac by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUndefined by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPositiveInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymInt by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymNegativeInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUnordered by sympany.symbolics.Sym[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymSum by sympany.symbolics.SymUnordered[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymProd by sympany.symbolics.SymUnordered[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymProd, sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymPow, sympany.symbolics.SymPM, sympany.symbolics.SymSum, sympany.symbolics.SymE, sympany.symbolics.Sym, sympany.symbolics.SymLog, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymUnordered, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.PowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.SumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsSumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.And. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.PatternVar. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.SymP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rule. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.LogP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.SumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Or. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Guard. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Repeat. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AnyP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.With. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.main.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern.SeqMatch. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Satisfies. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.PowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsSumP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ConstP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rule. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of sympany.ui.graph.Graph: Set(UsedName(Env,[Default]), UsedName(approx,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.IntP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.First. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Bind. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.LogP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ConstP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.IntP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.Sym,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 19 classes due to The sympany.symbolics.Sym has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymProd, sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymPow, sympany.symbolics.SymPM, sympany.symbolics.SymSum, sympany.symbolics.SymE, sympany.symbolics.Sym, sympany.symbolics.SymLog, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymUnordered, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(sympany.ui.graph.Graph)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymInt...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymInt[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymInt)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.IntP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymInt,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymInt has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymInt)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymLog...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymLog[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymLog)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.LogP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymLog,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymLog has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymLog)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymPow...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymPow[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymPow)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.PowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymPow,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymPow has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymPow)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.ui.graph.Graph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.ui.graph.Graph[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.ui.graph.Graph)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.ui.equations.Equations. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.main.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.ui.graph.Graph,ModifiedNames(changes = UsedName(finalize,[Default]))) invalidates 1 classes due to The sympany.ui.graph.Graph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.ui.graph.Graph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymPositiveInfinity...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymPositiveInfinity[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymPositiveInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymPositiveInfinity,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymPositiveInfinity has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymPositiveInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymPM...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymPM[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymPM)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymPM,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymPM has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymPM)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymE...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymE[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymE)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymE,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymE has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymE)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymVar...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymVar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymVar)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymVar,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(finalize,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymVar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(finalize,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymVar)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymConstant...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPi by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymE by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymDecimal by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymVar by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymR by sympany.symbolics.SymConstant[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymFrac by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymUndefined by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymPositiveInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymInt by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding sympany.symbolics.SymNegativeInfinity by sympany.symbolics.SymR[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymE, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ConstP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsPowP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.Pattern. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.RatP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.FracP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.rules.Rules. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.IntP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymConstant,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 11 classes due to The sympany.symbolics.SymConstant has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymPi, sympany.symbolics.SymFrac, sympany.symbolics.SymE, sympany.symbolics.SymUndefined, sympany.symbolics.SymPositiveInfinity, sympany.symbolics.SymDecimal, sympany.symbolics.SymVar, sympany.symbolics.SymConstant, sympany.symbolics.SymInt, sympany.symbolics.SymR, sympany.symbolics.SymNegativeInfinity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from sympany.symbolics.SymProd...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: sympany.symbolics.SymProd[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(sympany.symbolics.SymProd)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.simplification.Simplify. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.ProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.parse.Parse. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of sympany.patterns.AsProdP. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(sympany.symbolics.SymProd,ModifiedNames(changes = UsedName(approx,[Default]), UsedName(Env,[Default]))) invalidates 1 classes due to The sympany.symbolics.SymProd has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(approx,[Default]), UsedName(Env,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(sympany.symbolics.SymProd)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
